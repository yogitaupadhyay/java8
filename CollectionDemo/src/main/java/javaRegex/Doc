java.util.regex
	  1.Pattern(C)
	  2.MatchResult(I)
	             |_____ Matcher(C)
	  3..PatternSyntax(C)
	  
	  
	  
 order of learning 
	  RegexDemo1
	  RegexDemo1
	  RegexMetaCharacter
	  RegexBoundry
	 
	 
 Meta characters
	The following meta characters have a pre-defined meaning and make certain 
	common patterns easier to use. For example, you can use \d as simplified definition for [0..9].
	
	\d => [0-9]
	\D => [^0-9]
	\s => [\t\n\x0b\r\f]
	\S => A non white space character
	\w => [a-zA-Z_0-9], A word character
	\W => [^\w], A non word character
	\S+ => several white space characters
	\b => [a-zA-Z0-9_], matches the word boundary
	  
Quantifier 
	A quantifier defines how often an element can occur. The symbols ?, *, + and {} are qualifiers.
	
	* => {0,} Zero or more occurance
	+ => {1,} One or more occurance
	? => {0,1} None or One occurance
	{X} => Occurs X numbers times
	{X,Y} => Occurs between X and Y times
	*? => ? after a quantifier makes it a reluctant quantifier. 
			It tries to find the smallest match. 
			This makes the regular expression stop at the first match.
	